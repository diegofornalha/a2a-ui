#!/usr/bin/env python3
"""
Teste final do Claude Code SDK - Identidade
"""

import asyncio
import sys

# Adicionar caminho do SDK
sys.path.insert(0, '/home/codable/terminal/claude-code-sdk-python/src')

async def main():
    """Teste principal - Quem √© voc√™?"""
    
    print("=" * 60)
    print("ü§ñ TESTE CLAUDE: Identidade")
    print("=" * 60)
    
    try:
        # Importar Claude SDK
        from claude_code_sdk import query
        
        print("\n‚úÖ Claude Code SDK importado com sucesso!")
        
        # Pergunta 1: Identidade
        print("\n1Ô∏è‚É£ Pergunta: 'Quem √© voc√™?'")
        print("-" * 40)
        
        # IMPORTANTE: usar argumento nomeado 'prompt'
        async for message in query(prompt="Quem √© voc√™? Qual seu nome, modelo e vers√£o?"):
            if hasattr(message, 'content'):
                # Processar blocos de conte√∫do
                for block in message.content:
                    if hasattr(block, 'text'):
                        print(block.text)
                    else:
                        print(str(block))
            else:
                print(str(message))
        
        # Pergunta 2: Confirma√ß√£o
        print("\n2Ô∏è‚É£ Pergunta: 'Voc√™ √© o Claude da Anthropic?'")
        print("-" * 40)
        
        async for message in query(prompt="Voc√™ √© o Claude, assistente de IA da Anthropic?"):
            if hasattr(message, 'content'):
                for block in message.content:
                    if hasattr(block, 'text'):
                        print(block.text)
                    else:
                        print(str(block))
            else:
                print(str(message))
        
        # Pergunta 3: Capacidades
        print("\n3Ô∏è‚É£ Pergunta: 'Quais suas principais capacidades?'")
        print("-" * 40)
        
        async for message in query(prompt="Liste suas 5 principais capacidades de forma breve"):
            if hasattr(message, 'content'):
                for block in message.content:
                    if hasattr(block, 'text'):
                        print(block.text)
                    else:
                        print(str(block))
            else:
                print(str(message))
        
        print("\n" + "=" * 60)
        print("‚úÖ TESTE CONCLU√çDO COM SUCESSO!")
        print("=" * 60)
        
        print("\nüìä Resumo:")
        print("   ‚úì Claude Code SDK funcionando")
        print("   ‚úì Comunica√ß√£o estabelecida")
        print("   ‚úì Respostas recebidas corretamente")
        print("   ‚úì Identidade confirmada")
        
    except ImportError as e:
        print(f"\n‚ùå Erro de importa√ß√£o: {e}")
        print("\nüì¶ Instale o SDK:")
        print("   pip install claude-code-sdk")
        
    except Exception as e:
        print(f"\n‚ùå Erro: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    print("üöÄ Teste do Claude Code SDK")
    print("   Verificando sistema...")
    print()
    
    # Verificar Claude instalado
    import subprocess
    import os
    
    try:
        result = subprocess.run(
            ['claude', '--version'],
            capture_output=True,
            text=True,
            timeout=5
        )
        if result.returncode == 0:
            print(f"‚úÖ Claude Code: {result.stdout.strip()}")
        else:
            print("‚ö†Ô∏è Claude Code n√£o detectado")
    except:
        print("‚ö†Ô∏è Claude n√£o encontrado no PATH")
    
    # Verificar se Claude Code est√° rodando
    print("\n‚ö†Ô∏è IMPORTANTE: O Claude Code Desktop deve estar aberto!")
    print("   Se n√£o estiver, abra-o antes de continuar.")
    
    input("\nPressione ENTER para iniciar o teste...")
    
    # Executar teste
    asyncio.run(main())